[worker]
; setting the basic configs of worker service

; setting worker info
; WORKER_IP =
; WORKER_PORT =

; setting server info
; SERVER_IP = 
; SERVER_PORT = 

; setting images storage directory of worker
; e.g. STORAGE_POOL = "/var/lib/libvirt/images"
; STORAGE_POOL =

; setting network interface source for creating vmachine by importing qcow2
; e.g. NETWORK_INTERFACE_SOURCE = "br0"
; NETWORK_INTERFACE_SOURCE =

; setting HTTP config
; warnning: if setting http, should make sure a secure network construction
; e.g. PROTOCOL = "http" | "https"
; PROTOCOL =
; e.g. HEADERS = {"Content-Type": "application/json;charset=utf8"}
; HEADERS = 

[celery]
; setting the broker of celery worker
; we recommand use message queues as the broker, such as rabbitmq
; we do not ensure everything work normally as using redis or memcache
; e.g. BROKER_URL = amqp://[username:password]@[host]:[port]/[vhost]

; BROKER_URL = 

; setting the result backend of celery worker
; only support redis
; e.g. RESULT_BACKEND = redis://[:password]@[host]:[port]/[db]

; RESULT_BACKEND =

; setting the pubsub broker for socketio broadcast message queue
; only support message queue, redis or memcache is forbidden
; e.g. SOCKETIO_PUBSUB = amqp://[username:password]@[host]:[port]/[vhost]

; SOCKETIO_PUBSUB =