# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;
    client_max_body_size 100m;
    server_tokens off;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # server {
    #     listen       8080 default_server;
    #     listen       [::]:8080 default_server;
    #     server_name  0.0.0.0;

	# location ~ ^(?:(?!/static)).*\.(js|css|ico|png|jpg|eot|svg|ttf|woff|html|txt|pdf)$ {
	#     root /usr/share/nginx/html;
	#     expires 30d;
	# }

 	# location / {
	#     try_files $uri $uri/ /index.html;
	#     if (!-e $request_filename){
	#         rewrite ^(.*)$ /index.html last;
	#     }
	# }

	# location /api {
	#     proxy_pass http://0.0.0.0:21500;
	#     proxy_set_header X-Real-Ip $remote_addr;
	#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#     proxy_read_timeout 1800;
	# }

	# location /static {
	#     proxy_pass http://0.0.0.0:21500;
	#     proxy_set_header X-Real-Ip $remote_addr;
	#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# }

	# location ^~/socket.io {
	#     proxy_pass http://0.0.0.0:21500;
	#     proxy_set_header Host $host;
	#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	#     proxy_http_version 1.1;
	#     proxy_set_header Upgrade $http_upgrade;
	#     proxy_set_header Connection "upgrade";
	# }

	# error_page 401 /401.html;
	#     location = /401.html {
	# }

    #     error_page 404 /404.html;
    #         location = /404.html {
    #     }

    #     error_page 500 502 503 504 /50x.html;
    #         location = /50x.html {
    #     }
    # }

# Settings for a TLS enabled server.

	#  server {
	#  	   listen       443 ssl http2;
	#      listen       [::]:443 ssl http2;
	#      server_name  _;
	#      root         /usr/share/nginx/html;

	#      ssl_certificate "/etc/pki/nginx/server.crt";
	#      ssl_certificate_key "/etc/pki/nginx/private/server.key";
	#      ssl_session_cache shared:SSL:1m;
	#      ssl_session_timeout  10m;
	#      ssl_ciphers PROFILE=SYSTEM;
	#      ssl_prefer_server_ciphers on;

	#      # Load configuration files for the default server block.
	#      include /etc/nginx/default.d/*.conf;

	#      error_page 404 /404.html;
	#          location = /40x.html {
	#      }

	#      error_page 500 502 503 504 /50x.html;
	#          location = /50x.html {
	#      }
	#  }
	#  server {
	#      # SSL端口
	#      listen       2000 ssl;
	#      server_name  localhost;
	#      #crt文件，绝对路径
	#      ssl_certificate      "/Users/Administrator/Downloads/nginx-1.21.6/nginx-1.21.6/etc/scs1649922635239_radiatest.openeuler.org_server.crt";
	#      #key文件，绝对路径
	#      ssl_certificate_key  "/Users/Administrator/Downloads/nginx-1.21.6/nginx-1.21.6/etc/scs1649922635239_radiatest.openeuler.org_server.key";

	#      ssl_session_cache    shared:SSL:1m;
	#      ssl_session_timeout  5m;

	#      ssl_ciphers  HIGH:!aNULL:!MD5;
	#      ssl_prefer_server_ciphers  on;

	#      location ~ .*\.(js|css|ico|png|jpg|eot|svg|ttf|woff|html|txt|pdf|) {
	# 	       root html/dist;
	# 		   expires 30d;
	# 	   }


	# 	   location /static {
	# 		   proxy_pass https://0.0.0.0:2000/dist;
	# 		   proxy_set_header X-Real-Ip $remote_addr;
	# 		   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	   }
	# 	   location /api {
	# 		   proxy_pass http://192.168.0.165:5000;
	# 		   proxy_set_header X-Real-Ip $remote_addr;
	# 		   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 		   proxy_read_timeout 1800;
	# 	   }
	# 	   location /socket.io/ {
	# 		   proxy_pass http://0.0.0.0:3000;

	# 		   proxy_http_version 1.1;
	# 		   proxy_set_header Upgrade $http_upgrade;
	#          proxy_set_header X-Real-IP $remote_addr;
	# 		   proxy_set_header Connection "upgrade";
	#          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#          proxy_set_header Host $host;
	# 	   }
	#      location / {
	#          try_files $uri $uri/ index.html;
	# 			   if (!-e $request_filename){
	# 				   rewrite ^.*$ index.html last;
	# 			   }
	#      }
	#      error_page  404              /;
	# 		   error_page 500 502 503 504 /50x.html;
	# 		   location = /50x.html {
	# 	   }
	#   }

}